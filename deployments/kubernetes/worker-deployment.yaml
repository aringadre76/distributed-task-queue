apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker
  namespace: task-queue
  labels:
    app: worker
    component: worker
    version: v1
spec:
  replicas: 5
  selector:
    matchLabels:
      app: worker
  template:
    metadata:
      labels:
        app: worker
        component: worker
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8082"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: worker
        image: distributed-task-queue/worker:latest
        ports:
        - containerPort: 8082
          name: metrics
        env:
        - name: WORKER_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: DB_HOST
          value: "postgres-service"
        - name: DB_PORT
          value: "5432"
        - name: DB_NAME
          value: "taskqueue"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        - name: REDIS_HOST
          value: "redis-service"
        - name: REDIS_PORT
          value: "6379"
        - name: RABBITMQ_HOST
          value: "rabbitmq-service"
        - name: RABBITMQ_PORT
          value: "5672"
        - name: RABBITMQ_USER
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secret
              key: username
        - name: RABBITMQ_PASSWORD
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secret
              key: password
        - name: LOG_LEVEL
          value: "info"
        - name: MAX_CONCURRENT_TASKS
          value: "10"
        - name: POLL_INTERVAL
          value: "1s"
        - name: HEARTBEAT_INTERVAL
          value: "30s"
        - name: TASK_TIMEOUT
          value: "5m"
        - name: ENABLE_PARALLEL_EXECUTION
          value: "true"
        - name: PARALLEL_CONCURRENCY
          value: "5"
        - name: ENABLE_CIRCUIT_BREAKER
          value: "true"
        - name: ENABLE_ERROR_CLASSIFICATION
          value: "true"
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        livenessProbe:
          httpGet:
            path: /health
            port: 8082
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8082
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "sleep 30"]
      terminationGracePeriodSeconds: 60
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: worker-service
  namespace: task-queue
  labels:
    app: worker
spec:
  selector:
    app: worker
  ports:
  - name: metrics
    port: 8082
    targetPort: 8082
    protocol: TCP
  type: ClusterIP
  clusterIP: None
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: worker-hpa
  namespace: task-queue
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: worker
  minReplicas: 3
  maxReplicas: 50
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 85
  - type: External
    external:
      metric:
        name: redis_queue_depth
        selector:
          matchLabels:
            queue: "task_queue"
      target:
        type: AverageValue
        averageValue: "5"
  - type: External
    external:
      metric:
        name: worker_utilization
        selector:
          matchLabels:
            component: "worker"
      target:
        type: AverageValue
        averageValue: "70"
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 30
      policies:
      - type: Percent
        value: 50
        periodSeconds: 15
      - type: Pods
        value: 5
        periodSeconds: 15
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 180
      policies:
      - type: Percent
        value: 20
        periodSeconds: 60
      - type: Pods
        value: 3
        periodSeconds: 60
      selectPolicy: Min
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: worker-pdb
  namespace: task-queue
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: worker 